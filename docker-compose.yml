version: '3'

services:

  # app auth
  app_auth:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    container_name: app-auth
    restart: always
    volumes:
      - ./src/app-auth:/var/www/app-auth 
    networks:
      - microservices
    working_dir: /var/www/app-auth
    env_file: docker.env

  # server auth
  server_auth:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: server-auth
    restart: always
    ports:
      - 8000:80
    volumes:
      - ./src/app-auth:/var/www/app-auth
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - microservices
    working_dir: /var/www

  # server blog
  server_blog:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: server-blog
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./src/app-blog:/var/www/app-blog
      - ./docker/nginx/blog.conf:/etc/nginx/conf.d/default.conf
    networks:
      - microservices
    working_dir: /var/www

  # app blog
  app_blog:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    container_name: app-blog
    restart: always
    volumes:
      - ./src/app-blog:/var/www/app-blog 
    networks:
      - microservices
    working_dir: /var/www/app-blog
    env_file: docker.env
  
  # mysql database
  mysql_app:
    image: mysql:5.7.32
    container_name: app-database
    restart: on-failure
    # environment:
    #   - MYSQL_USER=root
    #   - MYSQL_ROOT_PASSWORD=secret
    #   - MYSQL_PASSWORD=secret
    volumes:
      - microservices_db:/var/lib/mysql
    networks:
      - microservices
    env_file: docker.env
    
  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: app-phpmyadmin
    restart: on-failure
    # environment:
    #   - PMA_HOST=mysql_app
    ports:
      - 9090:80
    networks:
      - microservices
    depends_on:
      - mysql_app
    env_file: docker.env

networks:
  microservices:
    external:
      name: laradock_backend

volumes:
  microservices_db: